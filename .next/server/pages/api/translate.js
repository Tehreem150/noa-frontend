"use strict";(()=>{var e={};e.id=95,e.ids=[95],e.modules={3582:e=>{e.exports=require("cors")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},2079:e=>{e.exports=import("openai")},9241:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>d,default:()=>c,routeModule:()=>u});var s=r(1802),n=r(7153),o=r(6249),i=r(376),l=e([i]);i=(l.then?(await l)():l)[0];let c=(0,o.l)(i,"default"),d=(0,o.l)(i,"config"),u=new s.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/translate",pathname:"/api/translate",bundlePath:"",filename:""},userland:i});a()}catch(e){a(e)}})},376:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{default:()=>handler});var s=r(3582),n=r.n(s),o=r(2079),i=e([o]);o=(i.then?(await i)():i)[0];let l=n()({methods:["POST","OPTIONS"],origin:"*"}),c=new o.default({apiKey:process.env.OPENAI_API_KEY});async function handler(e,t){if(await new Promise((r,a)=>{l(e,t,e=>e instanceof Error?a(e):r(e))}),"POST"!==e.method)return t.status(405).json({error:"Method not allowed"});let{text:r,sourceLang:a="en",targetLang:s}=e.body;if(!r||!s)return t.status(400).json({error:"Missing required fields"});try{let e=`Translate the following text from ${a} to ${s}. Keep medical terms accurate:

"${r}"`,n=await c.chat.completions.create({model:"gpt-4o-mini",messages:[{role:"user",content:e}],temperature:.3}),o=n.choices[0].message.content.trim();t.status(200).json({translatedText:o})}catch(e){console.error("Translation error:",e.message),t.status(500).json({error:"Translation failed"})}}a()}catch(e){a(e)}})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(9241));module.exports=r})();